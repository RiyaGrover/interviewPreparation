Question - https://leetcode.com/problems/max-consecutive-ones-iii/description/?envType=study-plan-v2&envId=leetcode-75

class Solution {
    public int longestOnes(int[] nums, int k) {
        
        int ans = 0;
        int i =0;
        int j = -1;

        int count= 0; // count of zeroes present in the list 

        while(i < nums.length){
            //aquire

            if(nums[i] == 0){
                count ++;
                i++;
            } else {
                i++;
            }
            // if invalid, release until the string is valid 

            while(count > k){
                j++;

                if(nums[j] == 0){
                    count--;
                } else{
                    //it is 1 so count of zeroes will not get decreased 
                }
            }
            //consider

            int sizeOfWindow = i-j-1;
            ans = Math.max(ans, sizeOfWindow);
    
        }
        return ans;
    }
}